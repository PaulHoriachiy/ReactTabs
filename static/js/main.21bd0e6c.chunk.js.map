{"version":3,"sources":["styles/tabs/index.js","components/tabs/header/TabHead.js","components/tabs/content/ImgContent.js","components/tabs/content/TableContent.js","styles/accordions/index.js","components/accordion/content/AccordionContent.js","components/accordion/header/AccordionHeader.js","constants/tabs/index.js","constants/accordions/index.js","containers/App.js","serviceWorker.js","index.js"],"names":["Title","styled","div","_templateObject","_ref","primary","Content","_templateObject2","TabNav","_templateObject3","Wrapper","_templateObject4","TabHead","tabData","handleActive","active","map","_ref2","title","index","react_default","a","createElement","key","onClick","tabindex","ImgContent","src","alt","style","width","height","TableContent","border","textAlign","rowSpan","AcrdContainer","accordions_templateObject","AcrdHeader","accordions_templateObject2","isClicked","AcrdText","accordions_templateObject3","isPrimary","AcrdArrow","accordions_templateObject4","_ref3","AcrdContent","_templateObject5","AccordionContent","text","isActive","react","AccordionHeader","accordionData","primaryText","secondaryText","content_AccordionContent","tabsMap","FIRST","SECOND","THIRD","acrdnsData","App","state","activeTab","activeAccordion","handleClick","_this","setState","handleAccordionClick","_this$state","this","expanded","header_TabHead","header_AccordionHeader","isExpanded","content_ImgContent","content_TableContent","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21bd0e6c.chunk.js","sourcesContent":["// styled\nimport styled from 'styled-components';\n\nconst Title = styled.div`\n  padding: 13px 20px\n  min-width: 40px\n  cursor: pointer\n  text-align: center\n  margin-right: 0px\n  transition: all 0.5s\n  padding-top: 20px\n  padding-bottom: 20px\n  background-color: ${({ primary }) => primary ? '#ccc' : '#eaeaea'};\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding: 15px 15px;\n  box-shadow: 0px 1px 3px 0px #999\n  z-index: -1;\n  text-align: center;\n  margin-top: 10px;\n`;\n\nconst TabNav = styled.div`\n  display: flex\n  flex-direction: row\n  justify-content: flex-start;\n  box-shadow: 0px 1px 3px 0px #999\n  background-color: #eaeaea;\n  z-index: 1;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 60%\n  margin: 0 auto\n  padding: 25px 0px\n`;\n\nexport { Wrapper, TabNav, Content, Title };\n","// react\nimport React from 'react';\n// style\nimport { Title } from 'styles/tabs';\n// prop types\nimport PropTypes from 'prop-types';\n\nconst TabHead = ({ tabData, handleActive, active }) =>\n  tabData.map(({ title, index }) =>\n    <Title\n      key={index}\n      onClick={() => handleActive(index)}\n      tabindex={index}\n      primary={active === index}\n    >\n      {title}\n    </Title>\n  )\n\nTabHead.propTypes = {\n  tabData: PropTypes.array.isRequired,\n  handleActive: PropTypes.func.isRequired,\n  active: PropTypes.string.isRequired\n}\n\nexport default TabHead;\n","import React from 'react'\n// styles\nimport { Content } from 'styles/tabs'\n\nconst ImgContent = () => (\n  <Content>\n    <div>\n      <img \n        src='https://source.unsplash.com/random/250x150' \n        alt='img' \n        style={{width: '250px', height: '150px'}}/>\n    </div>\n    <h2>Hello</h2>\n    <div>We will</div>\n  </Content>\n)\n\nexport default ImgContent\n","import React from 'react'\n// styles\nimport { Content } from 'styles/tabs'\n\nconst TableContent = () => (\n  <Content>\n    <table style={{border: '2px solid #aaa'}}>\n      <thead>\n      <tr style={{'textAlign': 'center'}}>\n        <th>Hi, it is a table header</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr rowSpan='2' style={{border: '2px solid #aaa'}}>\n        <td style={{border: '2px solid #aaa'}}>First cell</td>\n        <td style={{border: '2px solid #aaa'}}>Second cell</td>\n      </tr>\n      <tr rowSpan='2' style={{border: '2px solid #aaa'}}>\n        <td style={{border: '2px solid #aaa'}}>First cell</td>\n        <td style={{border: '2px solid #aaa'}}>Second cell</td>\n      </tr>\n      </tbody>\n    </table>\n  </Content>\n)\n\nexport default TableContent\n","// styled\nimport styled from 'styled-components';\n\nconst AcrdContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px auto;\n  transition: all 0.3s;\n`;\n\nconst AcrdHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-content: center;\n  padding: 17px 25px;\n  background-color: #fff;\n  box-shadow: 0px 1px 3px 0px #999;\n  cursor: pointer;\n  transition: all 0.3s;\n  margin-top: ${({ isClicked }) => isClicked ? '10px' : '0'}\n`;\n\nconst AcrdText = styled.div`\n  color: ${({ isPrimary }) => isPrimary ? '#333' : '#999'};\n`;\n\nconst AcrdArrow = styled.div`\n  width: 8px;\n  height: 8px;\n  border-right: 2px solid #999;\n  border-bottom: 2px solid #999;\n  align-self: center;\n  transition: all 0.3s;\n  transform-origin: center center;\n  transform: rotate(${({ isClicked }) => isClicked ? '-135deg' : '45deg'});\n`;\n\nconst AcrdContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  background-color: #fff;\n  box-shadow: 0px 3px 3px 0px #999;\n  border-top: 1px solid #eaeaea;\n  margin-bottom: 10px;\n  transition: all 0.3s;\n`;\n\nexport {\n  AcrdContainer, \n  AcrdContent,\n  AcrdHeader,\n  AcrdText,\n  AcrdArrow\n};\n","import React, { Fragment } from \"react\";\n// style\nimport { AcrdText, AcrdContent } from \"styles/accordions\";\n// prop types\nimport PropTypes from \"prop-types\";\n\nconst AccordionContent = ({ text, isActive }) => (\n  <Fragment>\n    {isActive && (\n      <AcrdContent>\n        <AcrdText>{text}</AcrdText>\n        <AcrdText>\n          {\n            \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit eos maiores, fugiat suscipit ab id quia unde maxime ad.\"\n          }\n        </AcrdText>\n      </AcrdContent>\n    )}\n  </Fragment>\n);\n\nAccordionContent.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  text: PropTypes.string\n};\n\nexport default AccordionContent;\n","import React, { Fragment } from \"react\";\n// style\nimport { AcrdHeader, AcrdText, AcrdArrow } from \"styles/accordions\";\n// accordion component\nimport AccordionContent from \"components/accordion/content/AccordionContent\";\n// prop types\nimport PropTypes from \"prop-types\";\n\nconst AccordionHeader = ({ accordionData, handleActive, active }) =>\n  accordionData.map(({ primaryText, secondaryText, index }) => (\n    <Fragment key={index}>\n      <AcrdHeader\n        onClick={() => handleActive(index)}\n        isClicked={active === index}\n      >\n        <AcrdText isPrimary>{primaryText}</AcrdText>\n        <AcrdText>{secondaryText}</AcrdText>\n        <AcrdArrow isClicked={active === index} />\n      </AcrdHeader>\n      {active === index && (\n        <AccordionContent text={secondaryText} isActive={active === index} />\n      )}\n    </Fragment>\n  ));\n\nAccordionHeader.propTypes = {\n  accordionData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleActive: PropTypes.func.isRequired,\n  active: PropTypes.string\n};\n\nexport default AccordionHeader;\n","export const tabsMap = {\n  FIRST: 'FIRST',\n  SECOND: 'SECOND',\n  THIRD: 'THIRD'\n}\n\nexport const tabData = [\n  { title: 'Lets', index: 'FIRST' },\n  { title: 'Rock', index: 'SECOND' },\n  { title: 'It', index: 'THIRD' },\n]\n","export const acrdnsMap = {\n  FIRST: 'AFIRST',\n  SECOND: 'ASECOND',\n  THIRD: 'ATHIRD'\n}\n\nexport const acrdnsData = [\n  {\n    primaryText: 'Just primary text',\n    secondaryText: 'Here is some optional Text',\n    index: acrdnsMap.FIRST\n  },\n  {\n    primaryText: 'I am Batman',\n    secondaryText: '',\n    index: acrdnsMap.SECOND\n  },\n  {\n    primaryText: 'He is not a hero',\n    secondaryText: '',\n    index: acrdnsMap.THIRD\n  }\n]\n","import React, { Component, Fragment } from \"react\";\n// tab's components\nimport TabHead from \"components/tabs/header/TabHead\";\nimport ImgContent from \"components/tabs/content/ImgContent\";\nimport TableContent from \"components/tabs/content/TableContent\";\n// accordion's components\nimport AccordionHeader from \"components/accordion/header/AccordionHeader\";\nimport { AcrdContainer } from \"styles/accordions\";\n// tab constants\nimport { tabsMap, tabData } from \"constants/tabs\";\n// accordion constants\nimport { acrdnsData } from \"constants/accordions\";\n// styles\nimport { TabNav, Wrapper } from \"styles/tabs\";\n\nclass App extends Component {\n  state = {\n    activeTab: tabsMap.FIRST,\n    activeAccordion: \"\"\n  };\n\n  handleClick = activeTab => {\n    this.setState({ activeTab });\n  };\n\n  handleAccordionClick = activeAccordion => {\n    this.setState(state => {\n      if (state.activeAccordion === activeAccordion)\n        return { activeAccordion: \"\" };\n      return { activeAccordion: activeAccordion };\n    });\n  };\n\n  render() {\n    const { activeTab, activeAccordion, expanded } = this.state;\n\n    return (\n      <Wrapper>\n        <TabNav>\n          <TabHead\n            tabData={tabData}\n            handleActive={this.handleClick}\n            active={activeTab}\n          />\n        </TabNav>\n        <Fragment>\n          {tabsMap.FIRST === activeTab && (\n            <AcrdContainer>\n              <AccordionHeader\n                accordionData={acrdnsData}\n                handleActive={this.handleAccordionClick}\n                active={activeAccordion}\n                isExpanded={expanded}\n              />\n            </AcrdContainer>\n          )}\n          {tabsMap.SECOND === activeTab && <ImgContent />}\n          {tabsMap.THIRD === activeTab && <TableContent />}\n        </Fragment>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'containers/App.js';\nimport 'index.css';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}